import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.EmptyBorder;
public class AddExpense extends JFrame{
    static AddExpense frame;
    private static JPanel contentPanel;
    private JTextField idUser;
    private JComboBox month;
    private JComboBox year;
    private JTextField expense; 
    public static void ae(String[] args) {
        EventQueue.invokeLater(new Runnable(){

            @Override
            public void run() {
                // TODO Auto-generated method stub
                try {
                    frame = new AddExpense();
                    frame.setVisible(true);
                } catch (Exception e) {
                    //TODO: handle exception
                    e.printStackTrace();
                }
            }
            
        });
    }public AddExpense(){
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 450, 450);
        contentPanel = new JPanel();
        contentPanel.setBorder(new EmptyBorder(5, 5, 5,5));
        setContentPane(contentPanel);

        JLabel mssgLabel = new JLabel("ADD EXPENSE");

        JLabel idUsers = new JLabel("Id User : ");
        JLabel category = new JLabel("Category");
         JLabel Month = new JLabel("Months : ");
         JLabel Year = new JLabel("Year : ");
         JLabel Expense = new JLabel("Expense : ");

         idUser = new JTextField();
         idUser.setColumns(10);

         String Months[] = {"January", "February","March","April","May","June","July","July","August","September","October","November","December"};
         month = new JComboBox(Months);

         String Years[] = {"2010", "2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021"};
         year = new JComboBox(Years);

         expense = new JTextField();
         expense.setColumns(10);

         JButton button = new JButton("Add Expense");
         JButton add = new JButton("Add More Expense");
         JButton back = new JButton("Back");

         button.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                // TODO Auto-generated method stub
                String id = idUser.getText();
                String months = (String) month.getSelectedItem();
                String years = (String) year.getSelectedItem();
                String ex = expense.getText();
                Double Expense = Double.parseDouble(ex);

                int i = AddExpenseDB.save(id,months,years,Expense);
                if(i>0){
                    JOptionPane.showMessageDialog(AddExpense.this, "Expense added successfully!!");
                    Welcome.expense(new String[]{});
                    frame.dispose();
                }else{
                    JOptionPane.showMessageDialog(AddExpense.this, "Expense could not be added !");
                }
            }
             
         });
         add.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                // TODO Auto-generated method stub
                 if(e.getSource()== add){
                     idUser.setText("");
                     expense.setText("");
                     AddExpense.ae(new String[]{});
                 }
            }
             
         });
         back.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                // TODO Auto-generated method stub
                Welcome.expense(new String[]{});
                frame.dispose();
            }
             
         });
         GroupLayout contentPane = new GroupLayout(contentPanel);
         contentPane.setHorizontalGroup(
             contentPane.createParallelGroup(Alignment.LEADING)
             .addGroup(contentPane.createSequentialGroup()
             .addContainerGap(10, Short.MAX_VALUE)
             .addGroup(contentPane.createParallelGroup(Alignment.LEADING)
             .addGroup(contentPane.createSequentialGroup()
             .addGroup(contentPane.createParallelGroup(Alignment.LEADING)
             .addComponent(idUsers)
             .addComponent(Month, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
             .addComponent(Year, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
             .addComponent(Expense, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE))
             .addGap(10)
             .addGroup(contentPane.createParallelGroup(Alignment.LEADING)
             .addComponent(idUser, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
             .addComponent(month, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
             .addComponent(year, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
             .addComponent(expense, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE))
             .addGap(48))
             .addGroup(Alignment.TRAILING, contentPane.createSequentialGroup()
             .addGap(20)
             .addGroup(contentPane.createParallelGroup(Alignment.TRAILING)
             .addComponent(mssgLabel)
             .addGroup(contentPane.createParallelGroup(Alignment.TRAILING)
             .addComponent(mssgLabel)
             .addGroup(contentPane.createSequentialGroup()
             .addComponent(button, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
             .addGap(47)
             .addComponent(back)))
             .addGap(100)))))
             .addGroup(contentPane.createSequentialGroup()
             .addGap(146)
             .addComponent(mssgLabel)
             .addContainerGap(235, Short.MAX_VALUE))
         );
         contentPane.setVerticalGroup(
             contentPane.createParallelGroup(Alignment.TRAILING)
             .addGroup(contentPane.createSequentialGroup()
             .addGap(37)
             .addComponent(mssgLabel)
             .addGap(43)
             .addGroup(contentPane.createParallelGroup(Alignment.BASELINE)
             .addComponent(idUsers)
             .addComponent(idUser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
             .addGap(28)
             .addGroup(contentPane.createParallelGroup(Alignment.BASELINE)
             .addComponent(Month)
             .addComponent(month, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
             .addGap(28)
             .addGroup(contentPane.createParallelGroup(Alignment.BASELINE)
             .addComponent(Year)
             .addComponent(year, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
             .addGap(28)
             .addGroup(contentPane.createParallelGroup(Alignment.BASELINE)
             .addComponent(Expense)
             .addComponent(expense, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
             .addPreferredGap(ComponentPlacement.UNRELATED)
             .addGroup(contentPane.createParallelGroup(Alignment.BASELINE)
             .addComponent(button, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
             .addComponent(back))
             .addGap(18)
             .addComponent(mssgLabel)
             .addGap(25))
         );
         contentPanel.setLayout(contentPane);
      }
 
 }
 
